#pragma checksum "/home/shunjid/Documents/7th/eChartiFy/Views/Shared/_LoadChartIndex0.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a7be84f94b52fffb508e96531fc8d7d7698bae34"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__LoadChartIndex0), @"mvc.1.0.view", @"/Views/Shared/_LoadChartIndex0.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_LoadChartIndex0.cshtml", typeof(AspNetCore.Views_Shared__LoadChartIndex0))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/shunjid/Documents/7th/eChartiFy/Views/_ViewImports.cshtml"
using electionDbAnalytics;

#line default
#line hidden
#line 2 "/home/shunjid/Documents/7th/eChartiFy/Views/_ViewImports.cshtml"
using electionDbAnalytics.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7be84f94b52fffb508e96531fc8d7d7698bae34", @"/Views/Shared/_LoadChartIndex0.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"58e089a0dde2abdb61d1b13939118ce91353a68d", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__LoadChartIndex0 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("card-img-top responsive-img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/img_votingline4.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Card image cap"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/img_votingline3.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/img_votingline5.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/chartmin.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 610, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <!-- column -->
        <!-- Pie Chart -->
        <div class=""col s12 l8"">
            <div class=""card"">
                <div class=""card-content"">
                    <h4 class=""card-title"">Pie Chart Election</h4>
                    <div>
                        <canvas id=""chart3"" height=""150""></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Report On Pie Chart -->
        <div class=""col s4"">
           <div class="""">
                <div class=""card"">
                    ");
            EndContext();
            BeginContext(610, 94, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a7be84f94b52fffb508e96531fc8d7d7698bae346428", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(704, 1035, true);
            WriteLiteral(@"
                    <div class=""card-content"">
                        <div class=""d-flex no-block align-items-center m-b-15 red-text"">
                            <i class=""material-icons red-text"">assignment</i>&nbsp;&nbsp;Chart Report
                        </div>
                        <h6 style=""text-align: justify;"" id=""pieChartReport""></h6>
                    </div>
                </div>
            </div>
        </div>
        </div>


        <!-- Vertical Bar chart-->
        <div class=""row"">
           
         <div class=""col s12 l8"">
            <div class=""card"">
                <div class=""card-content"">
                    <h4 class=""card-title"">Bar Chart</h4>
                    <div>
                        <canvas id=""chart2"" height=""150""></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Report On Vertical Bar Chart -->
        <div class=""col s4"">
           <div class="""">
                <div class=""card"">
         ");
            WriteLiteral("           ");
            EndContext();
            BeginContext(1739, 94, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a7be84f94b52fffb508e96531fc8d7d7698bae348839", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1833, 1048, true);
            WriteLiteral(@"
                    <div class=""card-content"">
                        <div class=""d-flex no-block align-items-center m-b-15 red-text"">
                            <i class=""material-icons red-text"">assignment</i>&nbsp;&nbsp;Chart Report
                        </div><br>
                        <h6 style=""text-align: justify;"" id=""showBarChartReport""></h6>
                    </div>
                </div>
            </div>
        </div>
        </div>


        <!-- Horizontal Bar Chart -->
        <div class=""row"">
            <div class=""col s12 l8"">
            <div class=""card"">
                <div class=""card-content"">
                    <h4 class=""card-title"">Bar Chart Horizontal</h4>
                    <div>
                        <canvas id=""chart4"" height=""150""> </canvas>
                    </div>
                </div>
            </div>
        </div>
       
       <!-- Report On Horizontal Bar Chart -->
       <div class=""col s4"">
           <div class="""">
                <div class=""car");
            WriteLiteral("d\">\n                    ");
            EndContext();
            BeginContext(2881, 94, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a7be84f94b52fffb508e96531fc8d7d7698bae3411265", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2975, 525, true);
            WriteLiteral(@"
                    <div class=""card-content"">
                        <div class=""d-flex no-block align-items-center m-b-15 red-text"">
                            <i class=""material-icons red-text"">assignment</i>&nbsp;&nbsp;Chart Report
                        </div>
                        <h6 style=""text-align: justify;"" id=""showHorizontalBarChart""></h6>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <!-- End Of Horizontal Bar Chart -->
    </div>
</div>


");
            EndContext();
            BeginContext(3500, 9538, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7be84f94b52fffb508e96531fc8d7d7698bae3413119", async() => {
                BeginContext(3535, 225, true);
                WriteLiteral("\n        <script>\n        // variable #data contains all the information coming from /Election/Index in JSON format\n        // all the data are listed column wise in variables #year, #district ...\n        \n        var data = ");
                EndContext();
                BeginContext(3761, 31, false);
#line 102 "/home/shunjid/Documents/7th/eChartiFy/Views/Shared/_LoadChartIndex0.cshtml"
              Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
                EndContext();
                BeginContext(3792, 9191, true);
                WriteLiteral(@";
            keys = ['year', 'constituency_Number', 'district', 'constituency', 'latitude', 'longitude', 'registered_Voters', 'validVotes', 'voter_TurnOut_Percentage', 'winner', 'runnerUp', 'winnerVotes', 'runnerUpVotes', 'marginVotes', 'marginPercentage', 'magnitude' ],
                collection = data.reduce((r, o) => {
                    keys.forEach(k => r[k].push(o[k]));
                    return r;
                }, Object.assign(...keys.map(k => ({ [k]: [] })))),
                { year, constituency_Number, district, constituency, latitude, longitude, registered_Voters, validVotes, voter_TurnOut_Percentage, winner, runnerUp, winnerVotes, runnerUpVotes, marginVotes, marginPercentage, magnitude} = collection;


        </script>

    <script>
        function getWinnerVotes(winnerString) {
            var votes = 0;
            for (i = 0; i < winner.length; i++) {
                if (winner[i] == winnerString) {
                    votes = votes + winnerVotes[i];
                }
            }
   ");
                WriteLiteral(@"         return votes;
        }
    </script>
    <script>
        function getRunnerUpVotes(runnerUpString) {
            var votes = 0;
            for (i = 0; i < runnerUpVotes.length; i++) {
                if (runnerUp[i] == runnerUpString) {
                    votes = votes + runnerUpVotes[i];
                }
            }
            return votes;
        }
    </script>

    <script>

        $(document).ready(function () {


            // ************** Bar Chart Data ********************

            var bar_chart_label = Array.from(new Set(winner)); // distinct winner
            var bar_chart_winner_votes = [];
            // count total votes for each winner
            for (j = 0; j < bar_chart_label.length; j++) {
                bar_chart_winner_votes.push(getWinnerVotes(bar_chart_label[j]));
            }

            // Sorting Start
            var list = [];
            for (var j = 0; j < bar_chart_label.length; j++)
                list.push({ 'param1': bar_chart_label[j], 'param2':");
                WriteLiteral(@" bar_chart_winner_votes[j] });
            list.sort(function (a, b) {
                return ((a.param2 > b.param2) ? -1 : ((a.param2 == b.param2) ? 0 : 1));
            });
            for (var k = 0; k < list.length; k++) {
                bar_chart_label[k] = list[k].param1;
                bar_chart_winner_votes[k] = list[k].param2;
            }
            // Sorting End

            // Bar Chart Report
            document.getElementById(""showBarChartReport"").innerHTML = ""<b>"" + ""This bar chart represents votes of winners of each party in Bangladesh's all national elections. <br><br> For example, "" + bar_chart_label[0] + "" Party's Winners have got Highest Votes : "" + bar_chart_winner_votes[0] 
                + "" in all national elections of Bangladesh. </b>"";




            // ************** Pie Chart Data ********************


            var pieChartLabel = bar_chart_label;
            var pie_chart_runnerup_votes = [];
            var pie_chart_winner_votes = bar_chart_winner_votes;

           ");
                WriteLiteral(@" var totalVotesOfEachParty = [];
            // count total votes for each runnerUp
            for (j = 0; j < pieChartLabel.length; j++) {
                pie_chart_runnerup_votes.push(getRunnerUpVotes(pieChartLabel[j]));
            }
            // Sum Winner and Runner Up votes
            for (x = 0; x < pieChartLabel.length; x++) {
                totalVotesOfEachParty.push(pie_chart_winner_votes[x] + pie_chart_runnerup_votes[x]);
            }

            document.getElementById(""pieChartReport"").innerHTML = ""<b>"" +""This is a pie chart which shows that total votes of each party as winner and runner up in all the National Elections Of Bangladesh. <br><br><br> For Example ""
                +pieChartLabel[0]+"" party has got ""+ totalVotesOfEachParty[0] + "" votes, ""+pieChartLabel[1]+ "" has got ""+totalVotesOfEachParty[1]+ "" votes and ""+ pieChartLabel[2]+"" party has got ""+totalVotesOfEachParty[2]+ "" votes in national elections of Bangladesh till 2009"" +""</b>"" 

            document.getElementById(""showHoriz");
                WriteLiteral(@"ontalBarChart"").innerHTML = ""<b>"" + ""This horizontal bar chart represents the total votes of each party's as runner up in different constituency. <br>""+
            ""For example, ""+pieChartLabel[1]+"" party has got ""+ pie_chart_runnerup_votes[1]+ "" votes as runner up in all national elections of Bangladesh."" +""</b>""


            $(function () {
                ""use strict"";


                // Bar chart
                new Chart(document.getElementById(""chart2""), {
                    type: 'bar',
                    data: {
                        labels: bar_chart_label,
                        datasets: [{
                            label: ""Total Votes (Winners)"",
                            backgroundColor: ['#5e35b1', '#1976d2', '#388e3c', '#f57c00', '#d32f2f'],
                            data: bar_chart_winner_votes
                        }]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                     ");
                WriteLiteral(@"       display: true,
                            text: 'According to votes of winners'
                        }
                    }
                });

                // Pie chart
                new Chart(document.getElementById(""chart3""), {
                    type: 'pie',
                    data: {
                        labels: pieChartLabel,
                        datasets: [{
                            label: ""Total votes of each team"",
                            backgroundColor: ['#5e35b1', '#1976d2', '#388e3c', '#f57c00', '#d32f2f'],
                            data: totalVotesOfEachParty
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: 'Total votes of each party in all elections'
                        }
                    }
                });

                // Horizental Bar Chart
                new Chart(document.getElementById(""chart4""), {
 ");
                WriteLiteral(@"                   type: 'horizontalBar',
                    data: {
                        labels: pieChartLabel,
                        datasets: [{
                            label: ""Total votes "",
                            backgroundColor: ['#5e35b1', '#1976d2', '#388e3c', '#f57c00', '#d32f2f'],
                            data: pie_chart_runnerup_votes
                        }]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: 'Total votes of Runner up'
                        }
                    }
                });

                //Polar Chart
                new Chart(document.getElementById(""chart5""), {
                    type: 'polarArea',
                    data: {
                        labels: [""Africa"", ""Asia"", ""Europe"", ""Latin America""],
                        datasets: [{
                            label: ""Populat");
                WriteLiteral(@"ion (millions)"",
                            backgroundColor: [""#36a2eb"", ""#ff6384"", ""#4bc0c0"", ""#ffcd56"", ""#07b107""],
                            data: [2478, 5267, 5734, 3784]
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: 'Predicted world population (millions) in 2050'
                        }
                    }
                });

                //Radar chart
                new Chart(document.getElementById(""chart6""), {
                    type: 'radar',
                    data: {
                        labels: [""Africa"", ""Asia"", ""Europe"", ""Latin America"", ""North America""],
                        datasets: [{
                            label: ""250"",
                            fill: true,
                            backgroundColor: ""rgba(179,181,198,0.2)"",
                            borderColor: ""rgba(179,181,198,1)"",
                            point");
                WriteLiteral(@"BorderColor: ""#fff"",
                            pointBackgroundColor: ""rgba(179,181,198,1)"",
                            data: [8.77, 55.61, 21.69, 6.62, 6.82]
                        }, {
                            label: ""4050"",
                            fill: true,
                            backgroundColor: ""rgba(255,99,132,0.2)"",
                            borderColor: ""rgba(255,99,132,1)"",
                            pointBorderColor: ""#fff"",
                            pointBackgroundColor: ""rgba(255,99,132,1)"",
                            pointBorderColor: ""#fff"",
                            data: [25.48, 54.16, 7.61, 8.06, 4.45]
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: 'Distribution in % of world population'
                        }
                    }
                });

            });
        });

    </script>
    ");
                EndContext();
                BeginContext(12983, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a7be84f94b52fffb508e96531fc8d7d7698bae3423678", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13023, 1, true);
                WriteLiteral("\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13038, 1, true);
            WriteLiteral("\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
